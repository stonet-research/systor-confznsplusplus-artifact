#! /bin/bash

set -e

SCRIPT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
cd ${SCRIPT_DIR}
source ../common.sh

# Input
if [ $# != 2 ]; then
    echo "Usage: $0 <ZNS device (e.g., nvme0n2)> $1 <zones to finish (e.g., 300)>"
    exit 1
fi
DEV=$1
FINISH_SIZE=$2

# Device info
get_device_info ${DEV}

##################################
## fio options for specific ZNS ##
##################################
BS=$(echo "${DEV_SECT_SIZE} * ${DEV_ZONE_SIZE}" | bc)
# Use 300 finish zones as with ~1 finish/sec and at 50% rate limit we can do 1 finish every 2 seconds
# and benchmarks try to run for 10 minutes (10*60/2) = 300 and peak write bandwidth is 1.2GB/s = ~1 zone so within 10
# minutes we can fill (10*60) = 600 and we have a total of 904 zones
# FINISH_SIZE=300
WRITE_ZONES=$(echo "${DEV_ZONES} - ${FINISH_SIZE}" | bc) # All but the fill zones
APPEND_IODEPTH=(1 2 3 4 5 6 7) 

echo "#########################################################"
echo "###################### BENCH  SETUP #####################"
echo "#########################################################"
echo "---------------------------------------------------------"
printf 'FINISH_ZONES (Empty zones for finish): %18s\n' "${FINISH_SIZE}"
echo "---------------------------------------------------------"
printf 'APPEND_ZONES (Empty zones for appends): %17s\n' "${WRITE_ZONES}"
echo "---------------------------------------------------------"
printf 'APPEND_IODEPTH: %41s\n' "${APPEND_IODEPTH[*]}"
echo "---------------------------------------------------------"
echo ""

for append_iodepth in ${APPEND_IODEPTH[@]}; do
    echo "Benchmarking with CONCURRENT APPEND_IODEPTH: ${append_iodepth}"
    sudo nvme zns reset-zone /dev/${DEV} -a
    sudo env "DEV=${DEV_CHAR}" "APPEND_IODEPTH=${append_iodepth}" "APPEND_SIZE=${WRITE_ZONES}" \
        "FINISH_SIZE=${FINISH_SIZE}" ${FIO} \
            --output-format=json \
            --output=${SCRIPT_DIR}/data/data-append_iod_${append_iodepth}.json \
            ${SCRIPT_DIR}/jobs/job.fio
done

