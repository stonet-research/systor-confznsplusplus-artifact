#! /bin/bash

set -e

SCRIPT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
cd ${SCRIPT_DIR}
source ../common.sh

if [ $# != 1 ]; then
    echo "Usage: $0 <ZNS device (e.g., nvme0n2)>"
    exit 1
fi
DEV=$1

# Device info
get_device_info ${DEV}

##################################
## fio options for specific ZNS ##
##################################
CONCUR_FILL=4 # concurrent fill jobs to speedup filling
TRIM_IODEPTH=1 # concurrent trim jobs to find trim bw limit
# Use 70% of the zones for resets and 30% for reads
FILL_SIZE=$(echo "scale=0; ${DEV_ZONES} * 0.7" | bc | sed 's/\.[0-9]*//g')
READ_ZONES=$(echo "${DEV_ZONES} - ${FILL_SIZE}" | bc) # All but the fill zones
CONCUR_FILL_SIZE=$(echo "scale=0; ${FILL_SIZE} / ${CONCUR_FILL}" | bc)
READ_IODEPTH=(1 2 4 8 16 32 64 128)

echo "#########################################################"
echo "###################### BENCH  SETUP #####################"
echo "#########################################################"
echo "---------------------------------------------------------"
printf 'CONCUR_FILL_JOBS: %39s\n' "${CONCUR_FILL}"
echo "---------------------------------------------------------"
printf 'TRIM_SIZE: %46s\n' "${BS}"
echo "---------------------------------------------------------"
printf 'TRIM_JOBS: %46s\n' "${TRIM_IODEPTH}"
echo "---------------------------------------------------------"
printf 'FILL_ZONES (Zones filled for resets): %19s\n' "${FILL_SIZE}"
echo "---------------------------------------------------------"
printf 'READ_ZONES (Full zones for reads): %22s\n' "${READ_ZONES}"
echo "---------------------------------------------------------"
printf 'READ_IODEPTH: %43s\n' "${READ_IODEPTH[*]}"
echo "---------------------------------------------------------"
echo ""

for read_iodepth in ${READ_IODEPTH[@]}; do
    echo "Benchmarking READ_IODEPTH ${read_iodepth}"
    sudo nvme zns reset-zone /dev/${DEV} -a
    sudo env "DEV=${DEV_CHAR}" "BS=${DEV_ZONE_SIZE}" "FILL_SIZE=${FILL_SIZE}" "READ_IODEPTH=${read_iodepth}" \
        "READ_SIZE=${READ_ZONES}" ${FIO} \
            --output-format=json \
            --output=${SCRIPT_DIR}/data/data-read_iod_${read_iodepth}.json \
            ${SCRIPT_DIR}/jobs/job.fio
done
