#! /bin/bash

set -e

SCRIPT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
cd ${SCRIPT_DIR}
source ../common.sh

if [ $# != 2 ]; then
    echo "Usage: $0 <ZNS device (e.g., nvme0n2)> $1 <zones to finish (e.g., 300)>"
    exit 1
fi
DEV=$1
FINISH_SIZE=$2

# Device info
get_device_info ${DEV}

##################################
## fio options for specific ZNS ##
##################################
# Use 300 finish zones as with ~1 finish/sec and at 50% rate limit we can do 1 finish every 2 seconds
# and benchmarks try to run for 10 minutes (10*60/2) = 300 and peak write bandwidth is 1.2GB/s = ~1 zone so within 10
# minutes we can fill (10*60) = 600 and we have a total of 904 zones
READ_ZONES=$(echo "${DEV_ZONES} - ${FINISH_SIZE}" | bc) # All but the fill zones
READ_IODEPTH=(1 2 4 8 16 32 64 128) 

echo "#########################################################"
echo "###################### BENCH  SETUP #####################"
echo "#########################################################"
echo "---------------------------------------------------------"
printf 'FINISH_ZONES (Empty zones for finish): %18s\n' "${FINISH_SIZE}"
echo "---------------------------------------------------------"
printf 'READ_ZONES (Full zones for reads): %22s\n' "${READ_ZONES}"
echo "---------------------------------------------------------"
printf 'READ_IODEPTH: %43s\n' "${READ_IODEPTH[*]}"
echo "---------------------------------------------------------"
echo ""

for read_iodepth in ${READ_IODEPTH[@]}; do
    echo "Benchmarking with READ_IODEPTH: ${read_iodepth}"
    sudo nvme zns reset-zone /dev/${DEV_CHAR} -a

    sudo env "DEV=${DEV_CHAR}" "READ_IODEPTH=${read_iodepth}" "FINISH_SIZE=${FINISH_SIZE}" \
        "READ_SIZE=${READ_ZONES}" ${FIO} \
            --output-format=json \
            --output=${SCRIPT_DIR}/data/data-read_iod_${read_iodepth}.json \
            ${SCRIPT_DIR}/jobs/job.fio
done

